/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.Doctor;

import Business.Employee.Citizen;
import Business.VitalSign.VitalSign;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jinliyu
 */
public class InputResultsJPanel extends javax.swing.JPanel {
private JPanel upc;
private Citizen citizen;
    /**
     * Creates new form InputResultsJPanel
     */
    public InputResultsJPanel(JPanel upc, Citizen citizen) {
        initComponents();
        this.citizen =citizen;
        this.upc= upc;
        populateTable();
        populateComboBox();
    }
    
      public void populateComboBox(){
    jComboBox1.removeAllItems();
    jComboBox1.addItem("Yes");
    jComboBox1.addItem("No");
    }
      
    public void populateTable(){
       DefaultTableModel model = (DefaultTableModel) ResultTbl.getModel();

        model.setRowCount(0);
        for (VitalSign vs : citizen.getVitalSignHistory().getVitalSignHistory()) {
            Object row[] = new Object[5];
            row[0] = vs;
            row[1] = vs.getHeartRate();
            row[2] = vs.getWeight();
            row[3] = vs.getSysBloodPressure();
            row[4] = vs.getIsDiabete();
            model.addRow(row);
    
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTbl = new javax.swing.JTable();
        txtHeartRate = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        jLabel6.setText("times/min");

        txtBloodPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBloodPressureActionPerformed(evt);
            }
        });

        jLabel1.setText("Heartbeat");

        jLabel7.setText("mmHg");

        jLabel2.setText("Weight");

        jLabel3.setText("BloodPressure");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ResultTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Heartbeat", "Weight", "BloodPressure", "IsDiabete"
            }
        ));
        jScrollPane1.setViewportView(ResultTbl);

        txtHeartRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeartRateActionPerformed(evt);
            }
        });

        txtWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightActionPerformed(evt);
            }
        });

        jLabel5.setText("kg");

        jLabel4.setText("Date");

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        jLabel8.setText("(format:mm/yyyy)");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Is diabete");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backJButton)
                .addGap(288, 288, 288)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(45, 45, 45))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(29, 29, 29))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4))
                                .addGap(51, 51, 51)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtBloodPressure)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel7))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))))
                        .addGap(6, 6, 6)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBloodPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBloodPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBloodPressureActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        VitalSign vs= new VitalSign();
        
        if((!txtHeartRate.getText().equals(""))&&(!txtBloodPressure.getText().equals(""))&&(!txtWeight.getText().equals(""))&&(!txtDate.getText().equals(""))){
        int heartRate = Integer.parseInt(txtHeartRate.getText());
        int bloodPre = Integer.parseInt(txtBloodPressure.getText());
        float weight = Float.parseFloat(txtWeight.getText());
        String isdiabete = (String)jComboBox1.getSelectedItem();

        if(!(heartRate>0&&bloodPre>0&&weight>0)){
         JOptionPane.showMessageDialog(null, "Please input reasonable data!", "Information", JOptionPane.INFORMATION_MESSAGE);
     
        }
        else{
        //check if the input in right format
        String regEx = "^\\d{2}[/]20\\d{2}$";
        Pattern pattern = Pattern.compile(regEx);
        Matcher matcher = pattern.matcher(txtDate.getText());
        if(matcher.matches()){
            vs.setTimestamp(txtDate.getText());
        vs.setHeartRate(heartRate);
        vs.setSysBloodPressure(bloodPre);
        vs.setWeight(weight);
        vs.setIsDiabete(isdiabete);
        
        
        //check if heart rate is normal
        if(citizen.getAge()<=3){
            if(heartRate>100&&heartRate<120)
            vs.setIsHeartRateNormal("Normal");
            else
            vs.setIsHeartRateNormal("Abnormal");

        }

        if(citizen.getAge()>3&&citizen.getAge()<18){
            if(heartRate>70&&heartRate<110)
            vs.setIsHeartRateNormal("Normal");
            else
            vs.setIsHeartRateNormal("Abnormal");
        }

        if(citizen.getAge()>18&&citizen.getAge()<60){
            if(citizen.getSex().equals("male"))
            {
                if(heartRate>70&&heartRate<90)
                vs.setIsHeartRateNormal("Normal");
                else
                vs.setIsHeartRateNormal("Abnormal");
            }

            if(citizen.getSex().equals("female")){
                if(heartRate>75&&heartRate<95)
                vs.setIsHeartRateNormal("Normal");
                else
                vs.setIsHeartRateNormal("Abnormal");
            }
        }

        if(citizen.getAge()>60){
            if(heartRate>55&&heartRate<90)
            vs.setIsHeartRateNormal("Normal");
            else
            vs.setIsHeartRateNormal("Abnormal");
        }
        //end

        
        
        //check if weight is normal
        double a = citizen.getHeight();
      
        double a1 = a/100;
       
        double a2 = a1*a1;
       
        double bmi= weight/a2;
       
        if(citizen.getAge()>=18&&citizen.getAge()<70){
            vs.setBmi(bmi);
            if(bmi>=18.5&&bmi<=24.9){
            vs.setIsWeightNormal("Normal");
            }
            else{
            vs.setIsWeightNormal("Abnormal");
            }

        }
        else
        vs.setIsWeightNormal("/");
        
        //check if weight is normal

        
        //check if sysbloodpressure if normal
        
        if(bloodPre>=90&&bloodPre<120){
        vs.setIsBloodPressureNormal("Normal");
        }
        else
            vs.setIsBloodPressureNormal("Abnormal");
        
        
        
        if((vs.getIsBloodPressureNormal().equals("Normal")&&vs.getIsWeightNormal().equals("Normal")&&vs.getIsHeartRateNormal().equals("Normal")&&vs.getIsDiabete().equals("No"))||
                (vs.getIsBloodPressureNormal().equals("Normal")&&vs.getIsHeartRateNormal().equals("Normal")&&vs.getIsWeightNormal().equals("/")&&vs.getIsDiabete().equals("No")))
        vs.setResult("Normal");
        else
        vs.setResult("Abnormal");

        
        citizen.getVitalSignHistory().AddVitalSign(vs);
        populateTable();
            
        }
        else
                  JOptionPane.showMessageDialog(null, "Not in right format!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        
        //end
        
        // TODO add your handling code here:
        }
        else
                  JOptionPane.showMessageDialog(null, "Can't be empty!", "Information", JOptionPane.INFORMATION_MESSAGE);
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtHeartRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeartRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeartRateActionPerformed

    private void txtWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         int selectedRow = ResultTbl.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSign vs = (VitalSign) ResultTbl.getValueAt(selectedRow, 0);
            citizen.getVitalSignHistory().getVitalSignHistory().remove(vs);
             populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select an entry from the table", "Warning", JOptionPane.WARNING_MESSAGE);
        }// TODO add your handling code here:
    
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ResultTbl;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
